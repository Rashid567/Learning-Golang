/*
Что выведет программа?

Объяснить вывод программы.
*/
package main

func main() {
	ch := make(chan int)
	go func() {
		for i := 0; i < 10; i++ {
			ch <- i
		}
	}()
	for n := range ch {
		println(n)
	}
}

/*
ОТВЕТ

Вывод программы:
``
1
2
3
...
9
fatal error: deadlock
```

Объяснение:

Строка 9
Создаётся канал без буфера (для обмена данными нужен активный читатель и писатель)


Строки 10-14
Создаётся Gorutine, которая начинает в for цикле писать цифры от 0 до 9 включительно в канал.
При этом после окончания цикла не закрывает канал!


Строки 15-17
Вычитываются данные из канала с помощью range. До цифры 9 всё идёт хорошо, а потом:
- Gorutine завершает свою работу
- range ждёт новое число или закрытие канала
- Планировщик понимает, что основная Gorutine застряла на ожидании, а других нет,
  поэтому он завершает программу с ошибкой deadlock


P.s.
Если бы в Gorutine закрыли бы канал в конце, то программа завершилась бы без ошибки
*/
